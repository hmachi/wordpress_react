{"version":3,"file":"static/js/main.chunk.js","sources":["C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/App.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/common/const.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/index.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/layouts/footer.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/layouts/header.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/layouts/main.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/main/category.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/main/front-page.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/main/page.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/pages/main/post.tsx","C:/xampp/htdocs/wordpress/wp-content/themes/hmachi/react-src/src/serviceWorker.ts"],"sourcesContent":["import * as React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport Header from \"./pages/layouts/header\";\nimport Menu from \"./pages/layouts/menu\";\nimport Main from \"./pages/layouts/main\";\nimport Footer from \"./pages/layouts/footer\";\n\nconst App = () => {\n  const [isDispMenu, setIsDispMenu] = useState<boolean>(false);\n\n  return (\n    <BrowserRouter>\n      <Header isDispMenu={isDispMenu} setIsDispMenu={setIsDispMenu} />\n      {/* <Menu isDispMenu={isDispMenu} setIsDispMenu={setIsDispMenu} /> */}\n      <Main />\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","namespace Const {\r\n  export const MAX_GET_PROCESS_CNT = 3;\r\n\r\n  export const WEB_BASE_URL = \"/wordpress\";\r\n  export const API_BASE_URL = \"http://localhost/wordpress/wp-json\";\r\n  export const URL = {\r\n    WEB: {\r\n      FRONT_PAGE: WEB_BASE_URL,\r\n      PAGE: `${WEB_BASE_URL}/page`,\r\n      CATEGORY: `${WEB_BASE_URL}/category`,\r\n      POST: `${WEB_BASE_URL}/post`,\r\n    },\r\n    API: {\r\n      GET_BLOG_INFO: `${API_BASE_URL}/bloginfo/v1/get`,\r\n      GET_HEADER_MENU: `${API_BASE_URL}/header/v1/menu/get`,\r\n      GET_FOOTER_MENU: `${API_BASE_URL}/footer/v1/menu/get`,\r\n      GET_PAGE_CONTENT: `${API_BASE_URL}/wp/v2/pages/`,\r\n      GET_POST_CONTENT: `${API_BASE_URL}/wp/v2/posts/`,\r\n    },\r\n    IMAGE: {\r\n      FAVICON: \"/wordpress/wp-content/themes/hmachi/assets/images/favicon.ico\",\r\n    },\r\n  };\r\n\r\n  export const STR = {\r\n    PAGE: \"固定ページ\",\r\n    CATEGORY: \"カテゴリー\",\r\n    POST: \"投稿\",\r\n  };\r\n}\r\n\r\nexport default Const;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import * as React from \"react\";\r\nimport { FC, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  background-color: black;\r\n  width: 100%;\r\n`;\r\n\r\nconst FooterContent = styled.div`\r\n  &::after {\r\n    clear: both;\r\n    display: block;\r\n    content: \"\";\r\n  }\r\n`;\r\n\r\nconst FooterLeft = styled.div`\r\n  float: left;\r\n  padding: 30px;\r\n  color: #fff;\r\n`;\r\n\r\nconst FooterIconLink = styled(Link)`\r\n  color: #fff;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst FooterIcon = styled.img`\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst FooterTitle = styled.span`\r\n  color: #ddd;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst FooterRight = styled.div`\r\n  float: right;\r\n  padding: 10px 30px 0px 0px;\r\n`;\r\n\r\nconst FooterMenuRow = styled.div`\r\n  width: 250px;\r\n  border-bottom: 1px solid #aaa;\r\n  &:hover {\r\n    border-bottom: 1px solid #0bd;\r\n  }\r\n`;\r\n\r\nconst FooterLink = styled(Link)`\r\n  padding: 15px 0px 0px 0px;\r\n  display: block;\r\n  font-size: 10pt;\r\n  width: 100%;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #0bd;\r\n  }\r\n`;\r\n\r\nconst CopyrightRow = styled.div`\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 5px 0px;\r\n`;\r\n\r\ntype BlogInfoData = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\ntype FooterMenuData = {\r\n  id: number;\r\n  objectId: number;\r\n  title: string;\r\n  pageType: string;\r\n};\r\n\r\ntype GetBlogInfoProcess = (processCnt: number) => Promise<BlogInfoData>;\r\n\r\ntype GetFooterMenuProcess = (processCnt: number) => Promise<FooterMenuData[]>;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\n/* 設定情報取得 */\r\nconst getBlogInfoProcess: GetBlogInfoProcess = async (processCnt) => {\r\n  let blogInfo: BlogInfoData = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n  await axios\r\n    .get(Const.URL.API.GET_BLOG_INFO)\r\n    .then((response: any) => {\r\n      blogInfo = response.data;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n      processCnt -= 1;\r\n      processCnt === 0\r\n        ? alert(\"設定情報取得失敗\")\r\n        : await getBlogInfoProcess(processCnt);\r\n    });\r\n\r\n  return blogInfo;\r\n};\r\n\r\n/* フッターメニュー一覧取得 */\r\nconst getFooterMenuProcess: GetFooterMenuProcess = async (processCnt) => {\r\n  let footerMenuData: FooterMenuData[] = [];\r\n  await axios\r\n    .get(Const.URL.API.GET_FOOTER_MENU)\r\n    .then((response: any) => {\r\n      footerMenuData = response.data;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n      processCnt -= 1;\r\n      processCnt === 0\r\n        ? alert(\"フッターメニュー取得失敗\")\r\n        : await getFooterMenuProcess(processCnt);\r\n    });\r\n\r\n  return footerMenuData;\r\n};\r\n\r\nconst Footer = () => {\r\n  const [blogInfo, setBlogInfo] = useState<BlogInfoData>({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [footerMenuList, setFooterMenuList] = useState<FooterMenuData[]>([]);\r\n\r\n  useEffect(() => {\r\n    getBlogInfo();\r\n    getFooterMenu();\r\n  }, []);\r\n\r\n  const getBlogInfo = async () => {\r\n    setBlogInfo(await getBlogInfoProcess(Const.MAX_GET_PROCESS_CNT));\r\n  };\r\n\r\n  const getFooterMenu = async () => {\r\n    setFooterMenuList(await getFooterMenuProcess(Const.MAX_GET_PROCESS_CNT));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FooterContent>\r\n        <FooterLeft>\r\n          <FooterIconLink to={`${Const.WEB_BASE_URL}`}>\r\n            <FooterIcon src={Const.URL.IMAGE.FAVICON} alt=\"hmachi\" />\r\n            <FooterTitle>{blogInfo.title}</FooterTitle>\r\n          </FooterIconLink>\r\n        </FooterLeft>\r\n        <FooterRight>\r\n          {footerMenuList.map((footerMenu) => (\r\n            <FooterMenuRow key={footerMenu.id}>\r\n              {footerMenu.pageType == Const.STR.PAGE ? (\r\n                <FooterLink to={`${Const.URL.WEB.PAGE}/${footerMenu.objectId}`}>\r\n                  {footerMenu.title}\r\n                </FooterLink>\r\n              ) : footerMenu.pageType == Const.STR.CATEGORY ? (\r\n                <FooterLink\r\n                  to={`${Const.URL.WEB.CATEGORY}/${footerMenu.objectId}`}\r\n                >\r\n                  {footerMenu.title}\r\n                </FooterLink>\r\n              ) : footerMenu.pageType == Const.STR.POST ? (\r\n                <FooterLink to={`${Const.URL.WEB.POST}/${footerMenu.objectId}`}>\r\n                  {footerMenu.title}\r\n                </FooterLink>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </FooterMenuRow>\r\n          ))}\r\n        </FooterRight>\r\n      </FooterContent>\r\n      <CopyrightRow>\r\n        <small>&#169; 2021 hmachi.</small>\r\n      </CopyrightRow>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as React from \"react\";\r\nimport { FC, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px 0px 15px 0px;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  &::after {\r\n    clear: both;\r\n    display: block;\r\n    content: \"\";\r\n  }\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  float: left;\r\n  padding: 5px 0px 0px 10px;\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  float: right;\r\n  padding: 0px 10px;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst HeaderItem = styled.div`\r\n  float: left;\r\n  margin-right: 30px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst HeaderLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  color: black;\r\n  font-size: 11pt;\r\n  &:hover {\r\n    color: #0bd;\r\n    border-bottom: 1px solid #0bd;\r\n  }\r\n`;\r\n\r\nconst HeaderIconLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nconst HeaderIcon = styled.img`\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst HeaderTitle = styled.span`\r\n  padding-left: 5px;\r\n  color: black;\r\n  font-weight: bold;\r\n`;\r\n\r\ntype Props = {\r\n  isDispMenu: boolean;\r\n  setIsDispMenu: Function;\r\n};\r\n\r\ntype BlogInfoData = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\ntype HeaderMenuData = {\r\n  id: number;\r\n  objectId: number;\r\n  title: string;\r\n  pageType: string;\r\n};\r\n\r\ntype GetBlogInfoProcess = (processCnt: number) => Promise<BlogInfoData>;\r\n\r\ntype GetHeaderMenuProcess = (processCnt: number) => Promise<HeaderMenuData[]>;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\n/* 設定情報取得 */\r\nconst getBlogInfoProcess: GetBlogInfoProcess = async (processCnt) => {\r\n  let blogInfo: BlogInfoData = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n  await axios\r\n    .get(Const.URL.API.GET_BLOG_INFO)\r\n    .then((response: any) => {\r\n      blogInfo = response.data;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n      processCnt -= 1;\r\n      processCnt === 0\r\n        ? alert(\"設定情報取得失敗\")\r\n        : await getBlogInfoProcess(processCnt);\r\n    });\r\n\r\n  return blogInfo;\r\n};\r\n\r\n/* ヘッダーメニュー一覧取得 */\r\nconst getHeaderMenuProcess: GetHeaderMenuProcess = async (processCnt) => {\r\n  let headerMenuList: HeaderMenuData[] = [];\r\n  await axios\r\n    .get(Const.URL.API.GET_HEADER_MENU)\r\n    .then((response: any) => {\r\n      headerMenuList = response.data;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n      processCnt -= 1;\r\n      processCnt === 0\r\n        ? alert(\"ヘッダーメニュー取得失敗\")\r\n        : await getHeaderMenuProcess(processCnt);\r\n    });\r\n\r\n  return headerMenuList;\r\n};\r\n\r\nconst Header: FC<Props> = (props) => {\r\n  const [blogInfo, setBlogInfo] = useState<BlogInfoData>({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [headerMenuList, setHeaderMenuList] = useState<HeaderMenuData[]>([]);\r\n\r\n  useEffect(() => {\r\n    getBlogInfo();\r\n    getheaderMenu();\r\n  }, []);\r\n\r\n  const getBlogInfo = async () => {\r\n    setBlogInfo(await getBlogInfoProcess(Const.MAX_GET_PROCESS_CNT));\r\n  };\r\n\r\n  const getheaderMenu = async () => {\r\n    setHeaderMenuList(await getHeaderMenuProcess(Const.MAX_GET_PROCESS_CNT));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <HeaderContent>\r\n        <HeaderLeft>\r\n          <HeaderIconLink to={`${Const.WEB_BASE_URL}`}>\r\n            <HeaderIcon src={Const.URL.IMAGE.FAVICON} alt=\"hmachi\" />\r\n            <HeaderTitle>{blogInfo.title}</HeaderTitle>\r\n          </HeaderIconLink>\r\n        </HeaderLeft>\r\n        <HeaderRight>\r\n          {headerMenuList.map((headerMenu) => (\r\n            <HeaderItem key={headerMenu.id}>\r\n              {headerMenu.pageType == Const.STR.PAGE ? (\r\n                <HeaderLink to={`${Const.URL.WEB.PAGE}/${headerMenu.objectId}`}>\r\n                  {headerMenu.title}\r\n                </HeaderLink>\r\n              ) : headerMenu.pageType == Const.STR.CATEGORY ? (\r\n                <HeaderLink\r\n                  to={`${Const.URL.WEB.CATEGORY}/${headerMenu.objectId}`}\r\n                >\r\n                  {headerMenu.title}\r\n                </HeaderLink>\r\n              ) : headerMenu.pageType == Const.STR.POST ? (\r\n                <HeaderLink to={`${Const.URL.WEB.POST}/${headerMenu.objectId}`}>\r\n                  {headerMenu.title}\r\n                </HeaderLink>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </HeaderItem>\r\n          ))}\r\n        </HeaderRight>\r\n      </HeaderContent>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import * as React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport FrontPage from \"../main/front-page\"; // トップページ\r\nimport Page from \"../main/page\"; // 固定ページ\r\nimport Category from \"../main/category\"; // カテゴリーページ\r\nimport Post from \"../main/post\"; // 投稿ページ\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route\r\n          path={Const.URL.WEB.FRONT_PAGE}\r\n          exact\r\n          render={() => <FrontPage />}\r\n        />\r\n        <Route\r\n          path={`${Const.URL.WEB.PAGE}/:pageId`}\r\n          render={(routeProps) => <Page {...routeProps} />}\r\n        />\r\n        <Route\r\n          path={`${Const.URL.WEB.CATEGORY}/:categoryId`}\r\n          render={(routeProps) => <Category {...routeProps} />}\r\n        />\r\n        <Route\r\n          path={`${Const.URL.WEB.POST}/:postId`}\r\n          render={(routeProps) => <Post {...routeProps} />}\r\n        />\r\n        <Redirect to={Const.URL.WEB.FRONT_PAGE} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import * as React from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n`;\r\n\r\ntype RouteProps = RouteComponentProps<{ categoryId?: string }>;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\nconst process = async (url: string) => {\r\n  let data: any = null;\r\n  await axios\r\n    .get(url)\r\n    .then((response: any) => {\r\n      console.log(response);\r\n      data = response;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return data;\r\n};\r\n\r\n/* カテゴリーページ */\r\nconst Category: FC<RouteProps> = (props) => {\r\n  const [dom, setDom] = useState<string>(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      カテゴリーページ\r\n      <div dangerouslySetInnerHTML={{ __html: dom }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import * as React from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\nconst process = async (url: string) => {\r\n  let data: any = null;\r\n  await axios\r\n    .get(url)\r\n    .then((response: any) => {\r\n      console.log(response);\r\n      data = response;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return data;\r\n};\r\n\r\n/* トプページ */\r\nconst FrontPage = () => {\r\n  const [dom, setDom] = useState<string>(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      フロントページ\r\n      <div dangerouslySetInnerHTML={{ __html: dom }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","import * as React from \"react\";\r\nimport { FC, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n`;\r\n\r\ntype RouteProps = RouteComponentProps<{ pageId?: string }>;\r\n\r\ntype PageContentData = {};\r\n\r\ntype GetPageContentProcess = (\r\n  pageId: number,\r\n  rocessCnt: number\r\n) => Promise<any>;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\n/* 固定ページの内容取得 */\r\nconst getPageContentProcess: GetPageContentProcess = async (\r\n  pageId,\r\n  processCnt\r\n) => {\r\n  let pageContentData: PageContentData = {};\r\n  await axios\r\n    .get(Const.URL.API.GET_PAGE_CONTENT + pageId)\r\n    .then((response: any) => {\r\n      console.log(response.data);\r\n      pageContentData = response.data;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n      processCnt -= 1;\r\n      processCnt === 0\r\n        ? alert(\"ページデータ取得失敗\")\r\n        : await getPageContentProcess(pageId, processCnt);\r\n    });\r\n\r\n  return pageContentData;\r\n};\r\n\r\n/* 固定ページ */\r\nconst Page: FC<RouteProps> = (props) => {\r\n  const [pageContent, setPageContent] = useState<PageContentData>({});\r\n  const [dom, setDom] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    getPageContent();\r\n  }, [props.match.params.pageId]);\r\n\r\n  const getPageContent = async () => {\r\n    const response = await getPageContentProcess(\r\n      Number(props.match.params.pageId),\r\n      Const.MAX_GET_PROCESS_CNT\r\n    );\r\n\r\n    setDom(response.content.rendered);\r\n\r\n    // 以下のようにしてページのデータを取得する\r\n    // /wp-json/wp/v2/posts/:object_id\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div dangerouslySetInnerHTML={{ __html: dom }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import * as React from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport Const from \"../../common/const\";\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n`;\r\n\r\ntype RouteProps = RouteComponentProps<{ postId?: string }>;\r\n\r\ntype IErrorResponse = {\r\n  error: string;\r\n};\r\n\r\nconst process = async (url: string) => {\r\n  let data: any = null;\r\n  await axios\r\n    .get(url)\r\n    .then((response: any) => {\r\n      console.log(response);\r\n      data = response;\r\n    })\r\n    .catch(async (error: AxiosError<IErrorResponse>) => {\r\n      console.log(error);\r\n    });\r\n\r\n  return data;\r\n};\r\n\r\n/* 投稿ページ */\r\nconst Post: FC<RouteProps> = (props) => {\r\n  const [dom, setDom] = useState<string>(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      投稿ページ\r\n      <div dangerouslySetInnerHTML={{ __html: dom }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAdA;AAmBA;AACA;AACA;AACA;AAHA;AAxBA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAqBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AA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;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAUA;AACA,eAiCA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}